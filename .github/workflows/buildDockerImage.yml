on:
  workflow_call:
    inputs:
      RELEASE_REVISION:
        required: true
        type: string
      ECR_REPOSITORY:
        required: true
        type: string
      DOCKER_FILE:
        required: true
        type: string
      GENERATE_SSL_KEY:
        required: false
        type: boolean

name: Build and push docker image

jobs:
  reusable_workflow_job:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: MartinQuesada/gh-ecr-login@v1
      with:
        access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        region: us-east-1

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master

    - name: Docker cache layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-single-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-single-buildx

    - name: Gnerate SSL key
      if: ${{ inputs.GENERATE_SSL_KEY }}
      run: |
        openssl genrsa -out private.key 2048
        openssl rsa -in private.key -pubout -out public.key

    - name: Build & Push Image
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE_IMAGE: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.ECR_REPOSITORY }}:${{ inputs.RELEASE_REVISION }}
      run: |
        DOCKER_OPTS="${DOCKER_OPTS} --registry-mirror=https://mirror.gcr.io"  docker build -t ${{ inputs.ECR_REPOSITORY }}:${{ inputs.RELEASE_REVISION }} . -f ${{ inputs.DOCKER_FILE }} --build-arg GITHUB_TOKEN=${{ env.GITHUB_TOKEN }}
        docker tag ${{ inputs.ECR_REPOSITORY }}:${{ inputs.RELEASE_REVISION }} ${{ env.RELEASE_IMAGE  }}
        docker push ${{ env.RELEASE_IMAGE  }}