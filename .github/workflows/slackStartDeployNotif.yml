on:
  workflow_call:
    inputs:
      SLACK_CHANNEL:
        required: true
        type: string
      RELEASE_REVISION:
        required: true
        type: string
      ENVIRONMENT:
        required: true
        type: string
      GITHUB_ACTOR:
        required: true
        type: string
      DEPLOYMENT:
        required: false
        type: string

name: Start Task Slack Notification
run-name: Start Task Slack Notification

env:
  SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  DEPLOYMENT: ${{ secrets.DEPLOYMENT }}

jobs:
  reusable_workflow_job:
    runs-on: ubuntu-latest
    steps:
    - name: Set deployment name # if is different from secrets.DEPLOYMENT
      if: ${{ inputs.DEPLOYMENT }}
      run: echo "DEPLOYMENT=${{ inputs.DEPLOYMENT }}" >> $GITHUB_ENV
    - name: Notify slack
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }} # required
        VERSION_TAG: ${{ inputs.version-tag }} # NOTE github context can be used to retrieve inputs/outputs/context
        ACTION_STATUS: "success :thumbsup:" # NOTE Slack 'mrkdwn' format is supported
        TEXT_MESSAGE: "Build of notify-slack-action has been done successfully!" # Override the template variable $VERSION_TAG
      uses: MartinQuesada/notify-slack-action@2.1
      with:
        channel-id: ${{ inputs.SLACK_CHANNEL }}
        mechanism: blocks
        value: | # Make sure to use | in order to parse JSON text
          [
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "\r\n\r\n---------------------\r\n:construction: Starting deploy: Project *${{ vars.DEPLOYMENT }}*\r\n
          Tag version: *${{ inputs.RELEASE_REVISION }}*\r\n
          Environment: *${{ inputs.ENVIRONMENT }}*\r\n
          Launched by: *${{ inputs.GITHUB_ACTOR }}*\r\n
          --- (:candle:)\"
              }
            }
          ]